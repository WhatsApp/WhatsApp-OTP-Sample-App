plugins {
    id 'com.android.application'
    id 'checkstyle'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.whatsapp.otp.sample'
    compileSdk 33
    defaultConfig {
        applicationId "com.whatsapp.otp.sample"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
             signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_9
        targetCompatibility JavaVersion.VERSION_1_9
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    signingConfigs {
        debug {
            keyAlias 'SAKey'
            keyPassword 'sample#otpsa'
            storeFile file('../certificate/SAKey')
            storePassword 'sample#otpsa'
        }
    }
}

checkstyle {
    toolVersion = '8.42'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

task checkstyle(type: Checkstyle) {
    dependsOn 'checkstyleMain', 'checkstyleTest'
}

task checkstyleMain(type: Checkstyle) {
    source = "src/main/java"
    classpath = files()
    ignoreFailures = true
    showViolations = true

    reports {
        html.required = true
        html.destination = file("${project.buildDir}/reports/checkstyle/checkstyle.html")
    }

}

task checkstyleTest(type: Checkstyle) {
    source = "src/test/java"
    classpath = files()
    ignoreFailures = true
    showViolations = true

    reports {
        html.required = true
        html.destination = file("${project.buildDir}/reports/checkstyle/checkstyle-test.html")
    }
}

tasks.withType(JavaCompile) {
    dependsOn 'checkstyle'
    options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.0.3'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation "com.google.dagger:hilt-android:2.44"
    implementation 'com.whatsapp.otp:whatsapp-otp-android-sdk:0.1.0'
    annotationProcessor "com.google.dagger:hilt-compiler:2.44"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-inline:4.8.1'
    testImplementation "org.assertj:assertj-core:3.23.1"
    testImplementation "org.robolectric:robolectric:4.10.3"
    testImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}